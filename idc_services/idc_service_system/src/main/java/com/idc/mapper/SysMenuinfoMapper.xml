<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idc.mapper.SysMenuinfoMapper">
    <!-- 返回类型 -->
    <resultMap id="resultSysMenuinfoMap" type="SysMenuinfo">
        <!-- 数据库属性和实体类属性对应关系 -->

        <result column="id" property="id" />

        <result column="url" property="url" />

        <result column="icon" property="icon" />

        <result column="enabled" property="enabled" />

        <result column="name" property="name" />

        <result column="parent_id" property="parentId" />

        <result column="description" property="description" />

        <result column="tree_type" property="treeType" />

        <result column="create_time" property="createTime" />

    </resultMap>

    <resultMap id="resultMenuWithRoles" type="SysMenuinfo">
        <!-- 数据库属性和实体类属性对应关系 -->

        <result column="id" property="id" />

        <result column="url" property="url" />

        <result column="enabled" property="enabled" />

        <result column="name" property="name" />

        <result column="icon" property="icon" />

        <result column="parent_id" property="parentId" />

        <result column="description" property="description" />

        <result column="tree_type" property="treeType" />

        <result column="create_time" property="createTime" />

        <!-- 多角色关系 -->
        <collection property="sysRoleinfoTypes" ofType="List"  select="selectAuthority" column="{menu_id=id}"   >
        </collection>
    </resultMap>

    <!-- 获取所有的url对应的权限信息 -->

    <select id="getUrlAuthorities" resultMap="resultMenuWithRoles">
		select t1.* from sys_menuinfo t1
	</select>

    <select id="getUrlAuthoritiesForMenu" resultMap="resultSysMenuinfoMap">
         select * from sys_menuinfo t1
          where exists
              (
               select * from sys_permissioninfo tmp1
                    left join sys_ln_menu_permissioninfo tmp2 on tmp1.id = tmp2.permit_id
                    left join sys_ln_role_permissioninfo tmp3 on tmp3.permit_id = tmp2.permit_id
                    left join jbpm_oa_author tmp4 on tmp3.role_id = tmp4.role_id
                    where t1.id = tmp2.menu_id
                and tmp4.author_id = #{0}
            )
          order by  t1.sort ,t1.id desc,t1.parent_id
    </select>




    <select id="getMenuByPermi" resultMap="resultMenuWithRoles">
        select DISTINCT t1.* from sys_menuinfo t1 LEFT join sys_ln_menu_permissioninfo ln on ln.menu_id = t1.id
        WHERE  ln.permit_id in
        <foreach collection="list" index="index" item="item" open="("
                 separator="," close=")">
            #{item.id}
        </foreach>
        ORDER BY  t1.sort
    </select>
    <select id="getAllMenu" resultType="Map">
                select mm.url,mm.ICON,mm.name,bb.USER_ID,LMP_ID from (
            select DISTINCT t1.* from sys_menuinfo t1 LEFT join sys_ln_menu_permissioninfo ln on ln.menu_id = t1.id
        WHERE  ln.permit_id in(

         SELECT t1.id
           from sys_permissioninfo t1
           LEFT join sys_ln_role_permissioninfo t2
             on t2.permit_id = t1.id
          where t2.role_id in (select r.id
                                 from SYS_ROLEINFO r, SYS_LN_USERGRP_ROLE lr
                                where r.id = lr.role_id))
                                ）mm, (select distinct u.id user_id, lmp.menu_id lmp_id
           from SYS_USER_GROUP                gr,
                sys_userinfo                  u,
                SYS_LN_USER_USERGRP           ug，SYS_ROLEINFO r,
                SYS_LN_USERGRP_ROLE           lr,
                SYS_LN_ROLE_PERMISSIONINFO    lp,
                SYS_LN_MENU_PERMISSIONINFO lmp
          where gr.id = ug.ugrp_id
            and u.id = ug.user_id
            and lr.ugrp_id = gr.id
            and lr.role_id = r.id
            and lp.role_id = r.id
            and lp.permit_id = lmp.permit_id

          order by u.id) bb where mm.id=bb.lmp_id
    </select>
    <select id="selectAuthority" parameterType="java.util.HashMap" resultType="String">
		select DISTINCT t1.type  from sys_roleinfo t1
			left join sys_ln_role_permissioninfo t2 on t1.id = t2.role_id
			left join sys_permissioninfo t3 on t2.permit_id = t3.id
			left join sys_ln_menu_permissioninfo t4 on t3.id = t4.permit_id
			where t4.menu_id = ${menu_id}
	</select>

    <select id="getSysRoleinfoTypes"  resultType="java.lang.String">
        select DISTINCT t1.type  from sys_roleinfo t1
        left join sys_ln_role_permissioninfo t2 on t1.id = t2.role_id
        left join sys_permissioninfo t3 on t2.permit_id = t3.id
        left join sys_ln_menu_permissioninfo t4 on t3.id = t4.permit_id
        where t4.menu_id = #{0}
    </select>
    <!-- 通过主键查询记录 -->
    <select id="getModelById" resultType="SysMenuinfo">
        select
        <include refid="baseColumn" />
        from sys_menuinfo where id= #{0}
    </select>

    <!-- map对应的key和实体类中的属性一致 -->
    <select id="getModelByMap" resultType="SysMenuinfo"
            parameterType="Map">
        select
        <include refid="baseColumn" />
        from sys_menuinfo
        <include refid="whereParam" />
    </select>

    <!-- 通过实体类查询记录 -->
    <select id="getModelByObject" resultType="SysMenuinfo">
        select
        <include refid="baseColumn" />
        from sys_menuinfo
        <include refid="whereParam" />
        ORDER BY  sort
    </select>

    <!-- 查询所有记录 -->
    <select id="queryList" resultType="SysMenuinfo">
        select
        <include refid="baseColumn" />
        from sys_menuinfo
        ORDER BY  sort
    </select>

    <!-- 查询记录:map参数key对应实体类属性 查询多条记录 -->
    <select id="queryListByMap" resultType="SysMenuinfo"
            parameterType="Map">
        select
        <include refid="baseColumn" />
        from sys_menuinfo
        <include refid="whereParam" />
        ORDER BY  sort
    </select>

    <!-- 查询记录:通过实体类查询多条记录 -->
    <select id="queryListByObject" resultType="SysMenuinfo">
        select
        <include refid="baseColumn" />
        from sys_menuinfo
        <include refid="whereParam" />
        ORDER BY  sort
    </select>

    <!-- 分页查询 -->
    <select id="queryListPage" parameterType="PageBean" resultType="SysMenuinfo">
        select
        <include refid="baseColumn" />
        from sys_menuinfo
        <include refid="wherePageParam" />
        ORDER BY  sort
    </select>

    <!-- update -->
    <update id="updateByObject" parameterType="SysMenuinfo">
        update sys_menuinfo
        <include refid="updateParam" />
        WHERE
        id=#{id}
        <!--<include refid="whereParam" />-->
    </update>

    <update id="updateByMap" parameterType="Map">
        update sys_menuinfo
        <include refid="updateParam" />
        <include refid="whereParam" />
    </update>

    <!-- 慎用此方法 -->
    <delete id="deleteAll">
		delete from sys_menuinfo
	</delete>


    <delete id="deleteById">
		delete from sys_menuinfo where id= #{0}
	</delete>

    <!-- 删除数据 -->
    <delete id="deleteByObject" parameterType="SysMenuinfo">
        delete from sys_menuinfo
        <include refid="whereParam" />
    </delete>

    <!-- 删除数据 -->
    <delete id="deleteByMap" parameterType="Map">
        delete from sys_menuinfo
        <include refid="whereParam" />
    </delete>

    <!-- 删除数据 -->
    <delete id="deleteByList" parameterType="java.util.List">
        delete from sys_menuinfo where id in
        <foreach collection="list" index="index" item="item" open="("
                 separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- insert保存方法 -->
    <insert id="insert" parameterType="SysMenuinfo"
            useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" resultType="java.lang.Integer" order="BEFORE">
            select sys_menuinfo_seq.nextval from dual
        </selectKey>
        INSERT INTO sys_menuinfo
        (id,
        <include refid="insertColumn" />
        ) VALUES
        (#{id},
        <include refid="insertColumnParam" />
        )
    </insert>

    <!-- 批量保存 -->

    <insert id="insertList" parameterType="java.util.List">
        INSERT INTO sys_menuinfo (
        <include refid="insertColumn" />
        )
        VALUES
        <foreach collection="list" item="item" index="index"
                 separator=",">
            (
            <include refid="batchInsertColumnParam" />
            )
        </foreach>
    </insert>


    <!-- sql基本映射 -->
    <sql id="baseColumn">
	  <![CDATA[
		  	id as id,
			url as url,
			icon as icon,
			enabled as enabled,
			name as name,
			parent_id as parentId,
			description as description,
			tree_type as treeType,
			create_time as createTime
	  ]]>
	</sql>
    <sql id="whereParam">
        <where>

            <if test="id != null and id != '' ">  <![CDATA[ and id = #{id} ]]></if>

            <if test="url != null and url != '' ">  <![CDATA[ and url = #{url} ]]></if>
            <if test="icon != null and icon != '' ">  <![CDATA[ and icon = #{icon} ]]></if>
            <if test="enabled != null and enabled != '' ">  <![CDATA[ and enabled = #{enabled} ]]></if>

            <if test="name != null and name != '' ">  <![CDATA[ and name = #{name} ]]></if>

            <if test="parentId != null and parentId != '' ">  <![CDATA[ and parent_id = #{parentId} ]]></if>

            <if test="description != null and description != '' ">  <![CDATA[ and description = #{description} ]]></if>

            <if test="treeType != null and treeType != '' ">  <![CDATA[ and tree_type = #{treeType} ]]></if>

            <if test="createTime != null  ">  <![CDATA[ and create_time = #{createTime,jdbcType=TIMESTAMP} ]]></if>

        </where>
    </sql>
    <sql id="wherePageParam">
        <where>

            <if test="params.id != null and params.id != '' ">  <![CDATA[ and id = #{params.id} ]]></if>
            <if test="params.icon != null and params.icon != '' ">  <![CDATA[ and icon = #{params.icon} ]]></if>
            <if test="params.url != null and params.url != '' ">  <![CDATA[ and url = #{params.url} ]]></if>

            <if test="params.enabled != null and params.enabled != '' ">  <![CDATA[ and enabled = #{params.enabled} ]]></if>

            <if test="params.name != null and params.name != '' ">  <![CDATA[ and name = #{params.name} ]]></if>

            <if test="params.parentId != null and params.parentId != '' ">  <![CDATA[ and parent_id = #{params.parentId} ]]></if>

            <if test="params.description != null and params.description != '' ">  <![CDATA[ and description = #{params.description} ]]></if>

            <if test="params.treeType != null and params.treeType != '' ">  <![CDATA[ and tree_type = #{params.treeType} ]]></if>

            <if test="params.createTime != null ">  <![CDATA[ and create_time = #{params.createTime,jdbcType=TIMESTAMP} ]]></if>

        </where>
    </sql>

    <!-- update sql -->
    <sql id="updateParam">
        <set>
            <if test="id != null and id != '' ">  <![CDATA[  id = #{id } ,]]></if>

            <if test="url != null and url != '' ">  <![CDATA[  url = #{url } ,]]></if>
            <if test="icon != null and icon != '' ">  <![CDATA[  icon = #{icon } ,]]></if>
            <if test="enabled != null ">  <![CDATA[  enabled = #{enabled ,jdbcType=INTEGER},]]></if>

            <if test="name != null and name != '' ">  <![CDATA[  name = #{name } ,]]></if>

            <if test="parentId != null and parentId != '' ">  <![CDATA[  parent_id = #{parentId } ,]]></if>

            <if test="description != null and description != '' ">  <![CDATA[  description = #{description } ,]]></if>

            <if test="treeType != null and treeType != '' ">  <![CDATA[  tree_type = #{treeType } ,]]></if>

            <if test="createTime != null ">  <![CDATA[  create_time = #{createTime,jdbcType=TIMESTAMP} ,]]></if>

        </set>
    </sql>

    <!-- insert sql -->
    <sql id="insertColumn">
        <trim suffix="" suffixOverrides=",">
            <!--<if test="id != null and id != '' ">  <![CDATA[ id , ]]></if>-->
            <if test="icon != null and icon != '' ">  <![CDATA[ icon , ]]></if>
            <if test="url != null and url != '' ">  <![CDATA[ url , ]]></if>

            <if test="enabled != null and enabled != '' ">  <![CDATA[ enabled , ]]></if>

            <if test="name != null and name != '' ">  <![CDATA[ name , ]]></if>
            <if test="sort != null and sort != '' ">  <![CDATA[ sort , ]]></if>
            <if test="parentId != null and parentId != '' ">  <![CDATA[ parent_id , ]]></if>

            <if test="description != null and description != '' ">  <![CDATA[ description , ]]></if>

            <if test="treeType != null and treeType != '' ">  <![CDATA[ tree_type , ]]></if>

            <if test="createTime != null  ">  <![CDATA[ create_time ]]></if>
        </trim>
    </sql>

    <sql id="insertColumnParam">
        <trim suffix="" suffixOverrides=",">
            <!--<if test="id != null and id != '' ">  <![CDATA[ #{id } , ]]></if>-->
            <if test="icon != null and icon != '' ">  <![CDATA[ #{icon } , ]]></if>
            <if test="url != null and url != '' ">  <![CDATA[ #{url } , ]]></if>

            <if test="enabled != null and enabled != '' ">  <![CDATA[ #{enabled } , ]]></if>

            <if test="name != null and name != '' ">  <![CDATA[ #{name } , ]]></if>
            <if test="sort != null and sort != '' ">  <![CDATA[ #{sort } ,  ]]></if>
            <if test="parentId != null and parentId != '' ">  <![CDATA[ #{parentId } , ]]></if>

            <if test="description != null and description != '' ">  <![CDATA[ #{description } , ]]></if>

            <if test="treeType != null and treeType != '' ">  <![CDATA[ #{treeType } , ]]></if>

            <if test="createTime != null  ">  <![CDATA[ #{createTime } ]]></if>
        </trim>
    </sql>

    <!-- 批量保存 -->
    <sql id="batchInsertColumn">
			id,url,enabled,name,parent_id,description,tree_type,create_time
	</sql>

    <sql id="batchInsertColumnParam">
			#{item.id},#{item.url},#{item.enabled},#{item.name},#{item.parentId},#{item.description},#{item.treeType},#{item.createTime}
	</sql>
    <!-- The above code Provide us with useful modules,e.g. getModelById;getModelByMap;getModelByObject;queryList;queryListByMap;queryListByObject;queryListByObjectListPage;queryListByMapListPage;updateByObject;updateByMap;deleteAll;
        deleteById;deleteByObject;deleteByMap;deleteByList;insert;insertList -->
    <!-- The above code is static code of small changes, the business code start
        from here -->


































</mapper>